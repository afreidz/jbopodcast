---
import "$/styles/global.css";
import { Toaster } from "svelte-sonner";
import { ModeWatcher } from "mode-watcher";

let { class: classList } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Just a Bit Outside Podcast</title>
  </head>
  <body class={classList}>
    <slot />
    <ModeWatcher client:only="svelte" />
    <Toaster
      client:only="svelte"
      toastOptions={{
        classes: {
          error: "border-red-500/50",
          info: "border-blue-500/50",
          success: "border-green-500/50",
          warning: "border-amber-500/50",
        },
      }}
    />
  </body>
</html>

<script is:inline>
  const isBrowser = typeof localStorage !== "undefined";
  const getThemePreference = () => {
    if (isBrowser && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (isBrowser) {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
